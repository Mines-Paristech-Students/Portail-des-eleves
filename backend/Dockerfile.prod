###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.2 as builder

# set work directory
WORKDIR /usr/src/backend

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt-get update -y \
    && apt-get install postgresql gcc python3-dev musl-dev -y
RUN apt-get install gcc
RUN apt-get install poppler-utils -y
RUN apt-get clean

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
#RUN flake8 --ignore=E501,F401 .

# install dependencies
RUN pip install cmake
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/backend/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.2

# create directory for the backend user
RUN mkdir -p /home/backend

# create the backend user
RUN addgroup --system backend && adduser --system --group backend

# create the appropriate directories
ENV HOME=/home/backend
ENV APP_HOME=/home/backend/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/assets
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install libpq-dev
RUN apt-get install poppler-utils -y
COPY --from=builder /usr/src/backend/wheels /wheels
COPY --from=builder /usr/src/backend/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R backend:backend $APP_HOME

# change to the app user
USER backend

# run entrypoint.prod.sh
ENTRYPOINT ["/home/backend/web/entrypoint.prod.sh"]